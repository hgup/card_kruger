
Extra References:
- https://arxiv.org/abs/2108.05858

We have selected a dataset from the [Econometrics Dataset Package](https://cran.r-project.org/web/packages/Ecdat/index.html) from the various datasets listed [here](https://cran.r-project.org/web/packages/Ecdat/Ecdat.pdf).

A classic example for DiD analysis is the study by Card and Krueger (1994) on the impact of minimum wage increases on employment in the fast-food industry. This study utilized data from fast-food restaurants in New Jersey and Pennsylvania.

```{r}
library(pacman)
pacman::p_load(
  tidyverse,  # For data manipulation (dplyr, tidyr) and plotting (ggplot2)
  readxl,     # For reading Excel files
  fixest,     # For fast fixed-effects regression (feols)
  skimr,
  modelsummary, # For creating regression tables (alternative to stargazer)
  ggplot2,    # For plotting
  knitr       # For knitting the notebook and kable tables
)
path = "D:/analysis/Econometrics/project/card_kruger/"

# nice tables
nice_table <- function(x, ...) {
  knitr::kable(x, digits = 3, ...)
}
theme_set(theme_minimal())
# windows()
```

```{r}
# load the dataset
#function to read excel
raw_dat <-  read.csv(file.path(path,'data/fast-food-data.csv'))
```

The `CardKrueger1994` dataset includes information on employment, wages, and other characteristics of fast-food restaurants before and after the **minimum wage increase in New Jersey**, with Pennsylvania serving as a control group. Familiarize yourself with the dataset by examining its structure and summary statistics

```{r}
# summary(df)
str(raw_dat)
```

### Cleaning

```{r}
# endregion endregion Reshape data from wide to long format
# Stores measured before the wage change (wave 1) will have post = 0
# Stores measured after the wage change (wave 2) will have post = 1

#endregion Select wave 1 variables, rename ID, mark as pre-period (post=0)
df_pre <- raw_dat %>%
  select(
    store_id = X,
    chain, state, co_owned, starts_with("empft"), starts_with("emppt"),
    starts_with("nmgrs"), starts_with("wage_st")
    # Add any other time-varying controls if needed
    ) %>%
  select(-ends_with("2")) %>% # Remove any accidentally included wave 2 vars
  mutate(post = 0)

#Select wave 2 variables, rename ID and wave 2 variables, mark as post-period (post=1)
df_post <- raw_dat %>%
  select(
    store_id = X,
    chain, state, co_owned, ends_with("2") # Select ID, time-invariant vars, and wave 2 vars
  ) %>%
  rename_with(~ gsub("2$", "", .x), ends_with("2")) %>% # Remove '2' suffix
  mutate(post = 1)

# Combine pre and post dataframes
long_df <- bind_rows(df_pre, df_post)

```

```{r}
df <- long_df %>%
  mutate(
    empft = as.numeric(empft),
    emppt = as.numeric(emppt),
    wage_st = as.numeric(wage_st),
    nmgrs = as.numeric(nmgrs),
    # Total Full Time Employment
    emp_total = empft + (0.5 * emppt),
    treatment = ifelse(state == "nj", 1, 0),
    chain = factor(chain),
    state = factor(state)
  ) %>%
  select(
    store_id, treatment, post, state, chain, co_owned,
    empft, emppt, emp_total, wage_st, nmgrs
  ) %>%
  arrange(store_id, post)
```

```{r}
print("Structure of final long dataset")
str(df)
```
### Defining Treatment and Control Groups

```{r}
print("Summary of Final Long Dataset")
# summary(df) %>% nice_table()
skim(df %>% select(-store_id)) %>%
  filter(skim_type == "numeric") %>%
  rename(variable = "skim_variable", missing = "n_missing", ) %>%
  rename_with(~ gsub("^numeric.", "", .x), starts_with("numeric.")) %>% # Remove '2' suffix
  select(variable, missing, mean, sd, p0, p25, p50, p75, p100, hist ) %>%
  nice_table()
```


### Compare means before and after Policy Change

```{r}
avg_emp_summary <- df %>%
  group_by(state, post) %>%
  summarise(avg_emp = mean(emp_total, na.rm = TRUE), .groups = 'drop') # Use .groups='drop'

```


```{r}
plot_title <- "Average FTE Employment Before (0) and After (1) Policy Change"
emp_plot <- ggplot(avg_emp_summary, aes(x = factor(post), y = avg_emp, color = state, group = state)) +
  geom_line(linewidth = 1) +
  geom_point(size = 3) +
  labs(
    title = plot_title,
    x = "Period (0 = Before, 1 = After)",
    y = "Average FTE Employment",
    color = "State"
  ) +
  scale_color_manual(values = c("nj" = "blue", "pa" = "red")) # Assign colors

print(emp_plot)
```


## Running the DiD Model

```{r}
# Model 1: Basic DiD
# Y = emp_total
# treatment = 1 if NJ, 0 if PA
# post = 1 if after policy, 0 if before
# Interaction term `treatment:post` captures the DiD effect
m1_basic_did <- feols(emp_total ~ treatment * post, data = df)
```

```{r}
# Model 2: DiD with Covariates
# Adding control variables: chain, company ownership, starting wage, num managers
m2_did_cov <- feols(emp_total ~ treatment * post + chain + co_owned + wage_st + nmgrs,
                    data = df)
```

```{r}
# Model 3: DiD with Store Fixed Effects (FE) and Covariates
# Controls for all time-invariant store characteristics
# `treatment` main effect is absorbed by store FE. DiD effect is still `treatment:post`
m3_did_fe <- feols(emp_total ~ treatment * post + chain + co_owned + wage_st + nmgrs | store_id,
                   data = df)

```

```{r}
# Model 4: DiD with Store FE, Covariates, and Clustered Standard Errors (SEs)
# Cluster SEs by state, the level of treatment assignment.
# Be cautious with few clusters (only 2 states).
m4_did_fe_clust <- feols(emp_total ~ treatment * post + chain + co_owned + wage_st + nmgrs | store_id,
                         data = df,
                         cluster = ~state)
```

# DiD Model Results

```{r}
# Display results using modelsummary (modern alternative to stargazer)
# Provides clean tables in various formats (default is console)
models <- list(
  "Basic DiD" = m1_basic_did,
  "DiD + Cov" = m2_did_cov,
  "DiD + Cov + FE" = m3_did_fe,
  "DiD + Cov + FE (Clust SE)" = m4_did_fe_clust
  # Add m4b_did_fe_clust_store if you ran it
)

# Customize the output: focus on key coefficients, add GOF stats
modelsummary(models,
             stars = TRUE, # Add significance stars
             coef_map = c("treatment:post" = "NJ x Post (DiD Effect)", # Rename interaction term
                          "treatment" = "NJ (Treatment)",
                          "post" = "Post-Policy Period"),
             gof_map = c("nobs", "r.squared", "adj.r.squared"), # Goodness-of-fit stats
             title = "DiD Estimates of Minimum Wage Effect on FTE Employment")

```

## Interpretation Notes

The coefficient 'NJ x Post (DiD Effect)' estimates the average causal effect of the minimum wage increase on FTE employment in New Jersey relative to Pennsylvania

- A positive coefficient suggests employment increased more (or decreased less) in NJ relative to PA.

- A negative coefficient suggests employment decreased more (or increased less) in NJ relative to PA.

Model 3 (with Store FE) and Model 4 (with Store FE and Clustered SEs) are often preferred as they control for unobserved store-specific characteristics and potential error correlation

Statistical significance (indicated by stars) suggests whether the observed effect is likely different from zero.